#!/bin/bash

# TODO dependency checking
# TODO validation for certain options

version='0.1.0'

BOLD='\033[1m'
RESET_BOLD='\033[21m'
UNDERLINE='\033[4m'
RESET_UNDERLINE='\033[24m'
DIM='\033[2m'

CYAN='\033[36m'
LIGHT_CYAN='\033[96m'
RESET_STYLE='\033[0m'

PROMPT_STYLE='\e[97m\e[7m\e[1m'
RESET_PROMPT='\e[0m'

echo ''
echo -e "${LIGHT_CYAN}Thank you for using Isaac Helbling's SheepIt CLI v${version}!${RESET_STYLE}"
echo ''
# echo Version: $version
echo -e "${CYAN}    Source code: ${UNDERLINE}https://github.com/isaachelbling/sheepit-cli"${RESET_STYLE}
echo -e "${CYAN}SheepIt Profile: ${UNDERLINE}https://www.sheepit-renderfarm.com/account.php?mode=profile&login=imhelbling"${RESET_STYLE}
echo ''


# Set defaults
jar_path=$HOME/bin/sheepit-client-5.590.2883.jar
home_config="${HOME}/.sheepit_cli_config"
local_config="${PWD}/.sheepit_cli_config"
log_dir=$HOME/.sheepit_logs

ui='text'
user=''
pass=''
cache_dir=''
compute_method=''
config=''
extras=''
gpu=''
memory=''
priority=''
proxy=''
rendertime=''
request_time=''
server=''

ui_option=''
user_option=''
pass_option=''
cache_dir_option=''
compute_method_option=''
config_option=''
extras_option=''
gpu_option=''
memory_option=''
priority_option=''
proxy_option=''
rendertime_option=''
request_time_option=''
server_option=''


# Overwrite with user-specified values

if [ -e $home_config ]
then
  echo -e "${DIM}Found configuration file at '${home_config}'${RESET_STYLE}"
  source $home_config
fi

if [ -e $local_config ]
then
  echo -e "${DIM}Found configuration file at '${local_config}'${RESET_STYLE}"
  source $local_config
fi

echo ''


# Initialize and display option variables

if [ ! -z $jar_path ]
then
  echo -e $BOLD'       'SheepIt Jar:${RESET_STYLE} $jar_path
fi

cache_dir_option=''
if [ ! -z $cache_dir ]
then
  echo -e $BOLD'   'Cache Directory:${RESET_STYLE} $cache_dir
  cache_dir_option="-cache-dir ${cache_dir}"
fi

compute_method_option=''
if [ ! -z $compute_method ]
then
  echo -e $BOLD'    'Compute Method:${RESET_STYLE}${RESET_STYLE} $compute_method
  compute_method="-compute-method ${compute_method}"
fi

config_option=''
if [ ! -z $config ]
then
  echo -e $BOLD''Configuration File:${RESET_STYLE} $config
  config_option="-config ${config}"
fi

cores_option=''
if [ ! -z $cores ]
then
  echo -e $BOLD'             'Cores:${RESET_STYLE} $cores
  cores_option="-cores ${cores}"
fi

extras_option=''
if [ ! -z $extras ]
then
  echo -e $BOLD'            'Extras:${RESET_STYLE} $extras
  extras_option="-extras ${extras}"
fi

gpu_option=''
if [ ! -z $gpu ]
then
  echo -e $BOLD'               'GPU:${RESET_STYLE} $gpu
  gpu_option="-gpu ${gpu}"
fi

memory_option=''
if [ ! -z $memory ]
then
  echo -e $BOLD'            'Memory:${RESET_STYLE} $memory
  memory_option="-memory ${memory}"
fi

priority_option=''
if [ ! -z $priority ]
then
  echo -e $BOLD'          'Priority:${RESET_STYLE} $priority
  priority_option="-priority ${priority}"
fi

proxy_option=''
if [ ! -z $proxy ]
then
  echo -e $BOLD'             'Proxy:${RESET_STYLE} $proxy
  proxy_option="-proxy ${proxy}"
fi

rendertime_option=''
if [ ! -z $rendertime ]
then
  echo -e $BOLD'       'Render Time:${RESET_STYLE} $rendertime
  rendertime_option="-rendertime ${rendertime}"
fi

request_time_option=''
if [ ! -z $request_time ]
then
  echo -e $BOLD'      'Request Time:${RESET_STYLE} $request_time
  request_time_option="-request-time ${request_time}"
fi

server_option=''
if [ ! -z $server ]
then
  echo -e $BOLD'            'Server:${RESET_STYLE} $server
  server_option="-server ${server}"
fi

ui_option=''
if [ ! -z $ui ]
then
  echo -e $BOLD'                'UI:${RESET_STYLE} $ui
  ui_option="-ui ${ui}"
fi

# Check username, prompt if none
user_option=''
if [ ! -z $user ]
then
  echo -e $BOLD'          'Username:${RESET_STYLE} $user
  echo ''
else
  echo ''
  printf "${PROMPT_STYLE}USERNAME:${RESET_PROMPT} "
  read user
fi
user_option="-login ${user}"

# Prompt password
printf "${PROMPT_STYLE}PASSWORD:${RESET_PROMPT} "
read -s pass
pass_option="-password ${pass}"
echo -e "\n"

# Concat options
options=''
options+=$user_option' '
options+=$pass_option' '
options+=$cache_dir_option' '
options+=$compute_method_option' '
options+=$config_option' '
options+=$cores_option' '
options+=$extras_option' '
options+=$gpu_option' '
options+=$priority_option' '
options+=$proxy_option' '
options+=$rendertime_option' '
options+=$request_time_option' '
options+=$server_option' '
options+=$ui_option' '



# Start SheepIt

if $logging
then
  echo -e "${LIGHT_CYAN}Starting SheepIt...${RESET_STYLE}"
  options+='-ui text'
  echo "Logging enabled, setting UI to 'text'"

  log_path="${log_dir}/sheepit_$(date +%Y-%m-%d-%H-%M-%S).log"
  echo "Logging to ${log_path}"

  # Make sure log dir exists
  if [ ! -d $log_dir ]
  then
    echo "  ${log_dir} does not exist, creating it."
    mkdir $log_dir
  fi

  echo ''
  java -jar $jar_path $options | tee $log_path
else
  echo -e "${LIGHT_CYAN}Starting SheepIt...${RESET_STYLE}"
  echo ''
  java -jar $jar_path $options
fi
